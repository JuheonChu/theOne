/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.57
 * Generated at: 2020-10-26 07:12:29 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.admin;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import org.springframework.beans.factory.annotation.Autowired;
import com.project.vo.*;
import com.project.service.*;
import java.util.*;

public final class orderstatus_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("jar:file:/C:/apache-tomcat-8.5.57/wtpwebapps/theOne/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1600329454716L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_packages.add("com.project.vo");
    _jspx_imports_packages.add("com.project.service");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("org.springframework.beans.factory.annotation.Autowired");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, false, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("  <link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/css/bootstrap.min.css\">\r\n");
      out.write("<title>Home</title>\r\n");
      out.write("<script src=\"https://code.jquery.com/jquery-3.5.1.js\"\r\n");
      out.write("\tintegrity=\"sha256-QWo7LDvxbWT2tbbQ97B53yJnYU3WhH/C8ycbRAkjPDc=\"\r\n");
      out.write("\tcrossorigin=\"anonymous\"></script>\r\n");
      out.write("<style>\r\n");
      out.write("\r\n");
      out.write("body > table{\r\n");
      out.write("\ttext-align:center;\r\n");
      out.write("\tmargin: 0 auto;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("div{\r\n");
      out.write("\ttext-align: center;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("table{\r\n");
      out.write("\tborder-collapse: collapse;\r\n");
      out.write("\ttext-align:center;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("tr{\r\n");
      out.write("\ttext-align: center;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("td{\r\n");
      out.write("\tborder:1px solid black;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("th{\r\n");
      out.write("\tborder: 1px solid black;\r\n");
      out.write("\ttext-align:center;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("\timg{\r\n");
      out.write("\t\twidth:33px;\r\n");
      out.write("\t\theight:auto;\r\n");
      out.write("\t}\r\n");
      out.write("</style>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<script>\r\n");
      out.write("$(function(){\r\n");
      out.write("\r\n");
      out.write("\t$(\".ratify\").click(function() {\r\n");
      out.write("\r\n");
      out.write("\t\t\t\tevent.preventDefault();\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t\t\tvar quantity = $(this).parent().find(\"input#reqCount\").val();\r\n");
      out.write("\t\t\t\tvar price = $(this).parent().find(\"input#price\").val();\r\n");
      out.write("\t\t\t\tvar profit = quantity * price;\r\n");
      out.write("\t\t\t\tvar imgsrc = $(this).parent().find(\"input#imgsrc\").val();\r\n");
      out.write("\t\t\t\tvar franchisekey = $(this).parent().find(\"input#franchisekey\").val();\r\n");
      out.write("\t\t\t\tvar pid = $(this).parent().find(\"input#pid\").val();\r\n");
      out.write("\t\t\t\tvar status = $(this).parent().find(\"input#status\").val();\r\n");
      out.write("\t\t\t\tvar available = $(this).parent().find(\"input#available\").val();\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\tvar warn = confirm(\"해당 상품을 주문을 승인하시겠습니까??\");\r\n");
      out.write("\t\t\t\tif (warn) {\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\tvar data = {\r\n");
      out.write("\t\t\t\t\t\tquantity: quantity,\r\n");
      out.write("\t\t\t\t\t\tprice: price,\r\n");
      out.write("\t\t\t\t\t\timgsrc: imgsrc,\r\n");
      out.write("\t\t\t\t\t\tfranchisekey: franchisekey,\r\n");
      out.write("\t\t\t\t\t\tpid: pid,\r\n");
      out.write("\t\t\t\t\t\tstatus: status,\r\n");
      out.write("\t\t\t\t\t\tavailable: available\r\n");
      out.write("\t\t\t\t\t};\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t if (!isStomp && socket.readyState != 1)return;\r\n");
      out.write("\t\t\t\t\tvar msg = $(this).parent().find(\"input#messagecontent\").val();\r\n");
      out.write("\t\t\t\t\tvar fromId = $(this).parent().find(\"input#fromId\").val();\r\n");
      out.write("\t\t\t\t\tvar receiver = $(this).parent().find(\"input#receiver\").val();\r\n");
      out.write("\t\t\t\t\tvar contractno = $(this).parent().find(\"input#contractno\").val();\r\n");
      out.write("\t\t\t\t\tvar pid = $(this).parent().find(\"input#pid\").val();\r\n");
      out.write("\t\t\t\t\tvar quantity = $(this).parent().find(\"input#reqCount\").val();\r\n");
      out.write("\t\t\t\t\tvar price = $(this).parent().find(\"input#price\").val();\r\n");
      out.write("\t\t\t\t\tvar profit = quantity * price;\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\tvar message = {\r\n");
      out.write("\t\t\t\t\t\tfromId : fromId,\r\n");
      out.write("\t\t\t\t\t\treceiver : receiver,\r\n");
      out.write("\t\t\t\t\t\tmessagecontent : msg,\r\n");
      out.write("\t\t\t\t\t\ttopic : '배송완료',\r\n");
      out.write("\t\t\t\t\t\tcontractno : contractno,\r\n");
      out.write("\t\t\t\t\t\tpid:pid,\r\n");
      out.write("\t\t\t\t\t\treqCount:quantity,\r\n");
      out.write("\t\t\t\t\t\tprofit:profit\r\n");
      out.write("\t\t\t\t\t};\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\tif (isStomp) {\r\n");
      out.write("\t\t\t\t\t\talert(\"승인완료!\");\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\tsocket.send('/app/stompTest/approveResources',{}, JSON.stringify(message));} \r\n");
      out.write("\t\t\t\t\telse {\r\n");
      out.write("\t\t\t\t\t\tsocket.send(msg);\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\tlocalStorage.setItem('approve', approve);\r\n");
      out.write("\t\t\t\t});\r\n");
      out.write("\t});\r\n");
      out.write("})\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("function connectStomp() {\r\n");
      out.write("\t\tvar sock = new SockJS(\"/stompTest\"); //end point\r\n");
      out.write("\t\tvar client = Stomp.over(sock);\r\n");
      out.write("\r\n");
      out.write("\t\tisStomp = true;\r\n");
      out.write("\t\tsocket = client;\r\n");
      out.write("\r\n");
      out.write("\t\tclient.connect({}, function() {\r\n");
      out.write("\t\t\tconsole.log(\"Connected StompTest!!!!!\");\r\n");
      out.write("\t\t\t//Controller에서의 MessageMapping, header, message(자유형식)\r\n");
      out.write("\t\t\tclient.send('/TTT', {}, \"연결됩니다...\"); //컨트롤러 매핑주소\r\n");
      out.write("\r\n");
      out.write("\t\t\t//해당 토픽을 구독한다.\r\n");
      out.write("\t\t\tclient.subscribe('/topic/message', function(event) {\r\n");
      out.write("\t\t\t\tconsole.log(\"!!!!!!!!!evt: \" + event);\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t});\r\n");
      out.write("\t}\r\n");
      out.write("\r\n");
      out.write("</script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<div>\r\n");
      out.write("\t<h2>주문요청 현황</h2>\r\n");
      out.write("</div><br/><br/>\r\n");
      out.write("\r\n");
      out.write("\r\n");

	int pagenum = ((Integer) request.getAttribute("page")).intValue();
	int startPage = (Integer) request.getAttribute("startPage");
	int endPage = (Integer) request.getAttribute("endPage");
	int totalPage = (Integer) request.getAttribute("totalPage");
	
	
	RequestOrderService service = (RequestOrderService)request.getAttribute("service");
	
	MemberService memberservice = (MemberService)request.getAttribute("memberService");
	
	List<RequestOrderVO> orderlist = (List<RequestOrderVO>)request.getAttribute("orderlist");
	
	String topic = "배송완료";

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t<table>\r\n");
      out.write("\t\t<tr>\r\n");
      out.write("\t\t\t<th>상품</th>\r\n");
      out.write("\t\t\t<th>메뉴</th>\r\n");
      out.write("\t\t\t<th>상품분류</th>\r\n");
      out.write("\t\t\t<th>HOT/ICE/BASIC/SOFT</th>\r\n");
      out.write("\t\t\t<th>상품설명</th>\r\n");
      out.write("\t\t\t<th>상품 가격</th>\r\n");
      out.write("\t\t\t<th>요청 수량</th>\r\n");
      out.write("\t\t\t<th>요청 지점</th>\r\n");
      out.write("\t\t\t<th>승인</th>\r\n");
      out.write("\t\t</tr>\r\n");
      out.write("\r\n");
      out.write("\t\r\n");
      out.write("\t\t");

				for(int i = 0; i < orderlist.size();i++){ 
						RequestOrderVO order = orderlist.get(i);
					//	System.out.println("작성자는? "+board.getWriter());
						ProductVO product = service.getProductByPid(order.getPid());// expected one result or null to be returned by selectOne()
						TempVO temp = service.getTempByRid(order.getRid());
						String receiver = memberservice.findIdByIdx(temp.getMember_index());
					
		
      out.write(" \t\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t<tr>\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t<td><img src = \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/images/paikdabang/");
      out.print(product.getImage());
      out.write("\"/></td>\r\n");
      out.write("\t            <td>");
      out.print(product.getMenu());
      out.write("</td>\r\n");
      out.write("\t            <td>");
      out.print(product.getType());
      out.write("</td>\r\n");
      out.write("\t            <td>");
      out.print(product.getTemp());
      out.write("</td>\r\n");
      out.write("\t            <td>");
      out.print(product.getDetailExplain());
      out.write("</td>\r\n");
      out.write("\t            <td>");
      out.print(product.getPrice());
      out.write("</td>\r\n");
      out.write("\t            <td>");
      out.print(order.getReqCount());
      out.write("</td>\r\n");
      out.write("\t            <td>");
      out.print(temp.getBrand() + " "+ temp.getLocation()+"점");
      out.write("</td>\r\n");
      out.write("\t            <td>\r\n");
      out.write("\t            \t<input type = \"hidden\" id = \"menu\" value = \"");
      out.print(product.getMenu() );
      out.write("\">\r\n");
      out.write("\t            \t<input type = \"hidden\" id = \"type\" value = \"");
      out.print( product.getType() );
      out.write("\"/>\r\n");
      out.write("\t            \t<input type = \"hidden\" id = \"temp\" value = \"");
      out.print( product.getTemp() );
      out.write("\"/>\r\n");
      out.write("\t            \t<input type = \"hidden\" id = \"detailExplain\" value = \"");
      out.print( product.getDetailExplain() );
      out.write("\"/>\r\n");
      out.write("\t            \t<input type = \"hidden\" id = \"price\" value = \"");
      out.print( product.getPrice());
      out.write("\"/>\r\n");
      out.write("\t            \t<input type = \"hidden\" id = \"reqCount\" value = \"");
      out.print( order.getReqCount() );
      out.write("\"/>\r\n");
      out.write("\t            \t<input type = \"hidden\" id = \"brand\" value = \"");
      out.print( temp.getBrand());
      out.write("\"/>\r\n");
      out.write("\t            \t<input type = \"hidden\" id = \"imgsrc\" value = \"");
      out.print(product.getImage() );
      out.write("\">\r\n");
      out.write("\t            \t<input type = \"hidden\" id = \"franchisekey\" value = \"");
      out.print( order.getRid());
      out.write("\"/><!--  franchisekey -->\r\n");
      out.write("\t            \t<input type = \"hidden\" id = \"pid\" value = \"");
      out.print(product.getIdx() );
      out.write("\"/>\r\n");
      out.write("\t            \t<input type = \"hidden\" id = \"status\" value = \"");
      out.print(order.getStatus() );
      out.write("\">\r\n");
      out.write("\t            \t<!-- 여기서부턴 메시지 관련된 태그들 -->\r\n");
      out.write("\t            \t<input type = \"hidden\" id = \"contractno\" value = \"");
      out.print(temp.getContractno() );
      out.write("\">\r\n");
      out.write("\t            \t<input type = \"hidden\" id = \"fromId\" value = \"");
      out.print( "admin" );
      out.write("\">\r\n");
      out.write("\t            \t<input type = \"hidden\" id = \"topic\" value = \"");
      out.print(topic );
      out.write("\">\r\n");
      out.write("\t            \t<input type = \"hidden\" id = \"receiver\" value = \"");
      out.print(receiver);
      out.write("\">\r\n");
      out.write("\t            \t<input type = \"hidden\" id = \"messagecontent\" value = \"");
      out.print(temp.getLocation() +"으로 배송완료되었습니다!" );
      out.write("\">\r\n");
      out.write("\t            \t<input type = \"button\"  id = \"ratify\" class=  \"ratify\" value = \"승인하기\">\r\n");
      out.write("\t            </td>\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t</tr>\r\n");
      out.write("\t\t");
} 
      out.write("\r\n");
      out.write("\t\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t\t<!-- 페이징 -->\r\n");
      out.write("\t\t<tr>\r\n");
      out.write("\t\t\t<td colspan='9'>\r\n");
      out.write("\t\t\t\t");

					if (startPage > 1) {
				
      out.write(" <a href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/headquarter/selectorder/from/franchise?page=");
      out.print(1);
      out.write("\">[처음으로]</a> ");

 	}
 
      out.write(' ');

 	if (pagenum > 10) {
 
      out.write(" <a href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/headquarter/selectorder/from/franchise?page=");
      out.print(pagenum - 10);
      out.write("\">[이전페이지]</a> ");

 	}
 
      out.write(' ');

 	for (int a = startPage; a <= endPage; a++) {
 	if (a == pagenum) {//현재페이지에있고, 같은페이지 클릭할수없게끔
 
      out.write(' ');
      out.write('[');
      out.print(a);
      out.write(']');
      out.write(' ');

 	} else {
 
      out.write(" <a href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/headquarter/selectorder/from/franchise?page=");
      out.print(a);
      out.write('"');
      out.write('>');
      out.write('[');
      out.print(a);
      out.write("]\r\n");
      out.write("\t\t\t</a> ");

 	}
 }
 
      out.write(' ');

 	if (totalPage - pagenum >= 10) {
 
      out.write(" <a href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/headquarter/selectorder/from/franchise?page=");
      out.print(pagenum + 10);
      out.write("\">[다음페이지]</a> ");

 	} else {
 
      out.write(" <a href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/headquarter/selectorder/from/franchise?page=");
      out.print(totalPage);
      out.write("\">[다음페이지]</a> ");

 	}
 
      out.write(' ');

 	if (endPage < totalPage) {
 
      out.write(" <a href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/headquarter/selectorder/from/franchise?page=");
      out.print(totalPage);
      out.write("\">[끝]</a> ");

 	}
 
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t\t\t</td>\r\n");
      out.write("\r\n");
      out.write("\t\t</tr>\r\n");
      out.write("\r\n");
      out.write("\t</table>\r\n");
      out.write("\t<br />\r\n");
      out.write("\r\n");
      out.write("\t<input type=\"button\" value=\"뒤로가기\"  class = \"btn btn-primary\" onclick=\"location.href='javascript:history.go(-1);'\" />\r\n");
      out.write("\t\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
